labs(title = "Average Distance Traveled by Evacuating Agents",
x = "Trial Number",
y = "Distance (m)",size = "Standard Deviation")
dist_plot
head(datamatrix)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET) %>%
mutate(Starting.Position = as.factor(Starting.Position),
Obstacles = as.factor(Obstacles),Max.TET = as.factor(Max.TET),
Population.Size = as.factor(Population.Size))
#Set initial conditions
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(lognorm)
library(glue)
library(RColorBrewer)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET) %>%
mutate(Starting.Position = as.factor(Starting.Position),
Obstacles = as.factor(Obstacles),Max.TET = as.factor(Max.TET),
Population.Size = as.factor(Population.Size))
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET) %>%
mutate(Starting.Position = as.factor(Starting.Position),
Obstacles = as.factor(Obstacles),
Population.Size = as.factor(Population.Size))
is.factor(anova_df$Max.TET)
is.factor(anova_df$Obstacles)
TET_anova <- aov(Max.TET ~ Starting.Position*Obstacles*Population.Size,
data = anova_df)
summary(TET_anova)
TET_anova$residuals
TET_anova$coefficients
is.factor(anova_df$Starting.Position)
is.factor(anova_df$Population.Size)
help(xtabs)
TET_anova <-
aov(Max.TET ~ Starting.Position * Obstacles * Population.Size,
data = anova_df)
summary(TET_anova)
levels(anova_df$Starting.Position)
unique(anova_df$-Max.TET)
unique(anova_df[1:3])
levels(anova_df[1:3])
is.factor(anova_df$Starting.Position)
data.class(anova_df$Starting.Position)
data.class(levels(anova_df$Starting.Position))
TET_anova <-
aov(Max.TET ~ Starting.Position * Obstacles * Population.Size +
Obstacles:Population.Size,
data = anova_df)
summary(TET_anova)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET)
#Set initial conditions
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(RColorBrewer)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET)
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
aov(Max.TET ~ Starting.Position * Obstacles * Population.Size,
data = anova_df)
summary(TET_anova)
TET_anova$effects
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
aov(Max.TET ~ Starting.Position * Obstacles * Population.Size + Starting.Position:Obstacles,
data = anova_df)
summary(TET_anova)
TET_anova$coefficients
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(Starting.Position,Obstacles,Population.Size,Max.TET)
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
lm(Max.TET ~ Starting.Position * Obstacles * Population.Size,
data = anova_df)
summary(TET_anova)
unique(anova_df$Obstacles)
head(datamatrix)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>% select(startposition,obstaclespresent,populationsize,Max.TET)
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
aov(Max.TET ~ Starting.Position * Obstacles * Population.Size,
data = anova_df)
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
aov(Max.TET ~ startingposition * obstaclespresent * populationsize,
data = anova_df)
#%>% mutate(Starting.Position = as.factor(Starting.Position),
#Obstacles = as.factor(Obstacles),
#Population.Size = as.factor(Population.Size))
TET_anova <-
aov(Max.TET ~ startposition * obstaclespresent * populationsize,
data = anova_df)
summary(TET_anova)
TET_anova$coefficients
help("aov")
replications(anova_df$Max.TET ~ anova_df$startposition * anova_df$obstaclespresent * anova_df$populationsize)
#start ANOVA
anova_df <- #make analysis df
datamatrix %>%
select(startposition,obstaclespresent,populationsize,Max.TET) %>%
mutate(startposition = as.factor(startposition),
obstaclespresent = as.factor(obstaclespresent),
populationsize = as.factor(populationsize))
replications(anova_df$Max.TET ~ anova_df$startposition * anova_df$obstaclespresent * anova_df$populationsize)
replications( ~ . - Max.TET,data = anova_df)
TET_anova <-
aov(Max.TET ~ startposition * obstaclespresent * populationsize,
data = anova_df)
summary(TET_anova)
TET_anova$coefficients
TET_anova$effects
TET_anova$xlevels
TET_anova$model
TET_anova$fitted.values
TET_anova$assign
TET_anova$qr
TET_anova$df.residual
summary(TET_anova)
TET_anova$terms
TET_anova <-
#aov(Max.TET ~ startposition * obstaclespresent * populationsize,
#data = anova_df)
lm(Max.TET ~ (startposition + obstaclespresent + populationsize)^2,
data = anova_df)
anova(TET_anova)
summary(TET_anova)
TET_anova <-
#aov(Max.TET ~ startposition * obstaclespresent * populationsize,
#data = anova_df)
lm(Max.TET ~ startposition * obstaclespresent * populationsize,
data = anova_df)
summary(TET_anova)
anova(TET_anova)
qqnorm(TET_anova$effects)
datamatrix[32,]
#Set initial conditions
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(lognorm)
library(RColorBrewer)
datamatrix["Scenario" = "S2","Avg.Distance.arithmetic"]
datamatrix["Scenario" == "S2","Avg.Distance.arithmetic"]
filter(datamatrix,Scenario == "S2") %>% select(Avg.Distance.Arithmetic)
filter(datamatrix,Scenario == "S2") %>% select(Avg.Distance.arithmetic)
labeled <- datamatrix[32,"Scenario"]
labeled
labeled <- datamatrix[32,c("Trial.Index","Scenario"]
labeled <- datamatrix[32,c("Trial.Index","Scenario")]
labeled
all_exit_cum_plot <- #generate plot
ggplot(all_exit_cum_data, mapping = aes(x = Time..s.,y = numexited)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label_repel(data = labeled,mapping = aes(label = Trial.Index)) +
facet_wrap(facets = ~exit) +
labs(title = "Total Occupants Exited by Exit",
y = "Occupants Exited",
x = "Time (s)")
all_exit_cum_plot <- #generate plot
ggplot(all_exit_cum_data, mapping = aes(x = Time..s.,y = numexited)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = labeled,mapping = aes(label = Trial.Index)) +
facet_wrap(facets = ~exit) +
labs(title = "Total Occupants Exited by Exit",
y = "Occupants Exited",
x = "Time (s)")
all_exit_cum_plot
labeled <- datamatrix[32,]
all_exit_cum_plot <- #generate plot
ggplot(all_exit_cum_data, mapping = aes(x = Time..s.,y = numexited)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = labeled,mapping = aes(label = Trial.Index)) +
facet_wrap(facets = ~exit) +
labs(title = "Total Occupants Exited by Exit",
y = "Occupants Exited",
x = "Time (s)")
all_exit_cum_plot
labeled
labeled <- all_exit_cum_data %>% filter(Trial.Index = 32) %>% filter(Time..s. = median(Time..s.))
labeled <- all_exit_cum_data %>% filter(Trial.Index == 32) %>% filter(Time..s. == median(Time..s.))
colnames(all_exit_cum_data)
all_exit_cum_data[1,]
labeled <- all_exit_cum_data %>% filter(Trial == "Trial 32") %>% filter(Time..s. == median(Time..s.))
labeled
labeled <- all_exit_cum_data %>% filter(Trial == "Trial 32") %>% filter(Time..s. == 200)
labeled
all_exit_cum_plot <- #generate plot
ggplot(all_exit_cum_data, mapping = aes(x = Time..s.,y = numexited)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = labeled,mapping = aes(label = Trial)) +
facet_wrap(facets = ~exit) +
labs(title = "Total Occupants Exited by Exit",
y = "Occupants Exited",
x = "Time (s)")
all_exit_cum_plot
rm(labeled)
all_exit_labeled <- all_exit_cum_data %>% filter(Trial == "Trial 32") %>% filter(Time..s. == 250)
all_exit_cum_plot <- #generate plot
ggplot(all_exit_cum_data, mapping = aes(x = Time..s.,y = numexited)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = all_exit_labeled,mapping = aes(label = Trial)) +
facet_wrap(facets = ~exit) +
labs(title = "Total Occupants Exited by Exit",
y = "Occupants Exited",
x = "Time (s)")
remaining_labeled <- remaining_plotdata %>% filter(Trial == 32) %>% filter(Time..s. == 250)
remaining_plot <- #generate plot
ggplot(remaining_plotdata,mapping = aes(x = Time..s.,y = remaining)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = remaining_labeled,mapping = aes(label = Trial)) +
labs(title = "Total Occupants Remaining In Evacuation",
y = "Occupants Remaining", x = "Time (s)") +
scale_y_continuous(limits = range(remaining_plotdata$remaining))
remaining_plot
remaining_labeled
remaining_labeled <- remaining_plotdata %>% filter(Trial == 32) %>% filter(Time..s. == 200)
remaining_labeled
head(remaining_plotdata)
remaining_labeled <- remaining_plotdata %>% filter(Trial == "Trial 32") %>% filter(Time..s. == 250)
remaining_plot <- #generate plot
ggplot(remaining_plotdata,mapping = aes(x = Time..s.,y = remaining)) +
geom_line(mapping = aes(colour = Scenario,group = Trial)) +
geom_label(data = remaining_labeled,mapping = aes(label = Trial)) +
labs(title = "Total Occupants Remaining In Evacuation",
y = "Occupants Remaining", x = "Time (s)") +
scale_y_continuous(limits = range(remaining_plotdata$remaining))
remaining_plot
exited_labeled <- exited_plotdata %>% filter(Trial == "Trial 32") %>%
filter(Time..s. == 250) #filter for suspect trial
exited_plot <- #generate plot
ggplot(exited_plotdata,mapping = aes(x = Time..s.,y = exited)) +
geom_line(mapping = aes(colour = Scenario, group = Trial)) +
geom_label(exited_labeled,mapping = aes(label = Trial)) +
labs(title = "Total Occupants Exited In Evacuation",
y = "Occupants Exited", x = "Time (s)") +
scale_y_continuous(limits = range(exited_plotdata$exited))
exited_plot
TET_anova$residuals
TET_anova$fitted.values
TET_anova
TET_residual_data <- data.frame(TET_anova$residuals,TET_anova$fitted.values)
head(TET_residual_data)
TET_anova$model
TET_residual_data <- #draw out residuals & fitted values
data.frame(TET_anova$residuals,TET_anova$fitted.values) %>%
mutate(Trial.Index = c(1:40)) %>%
left_join(select(datamatrix,Trial.Index,Scenario),by = "Trial.Index")
head(TET_residual_data)
TET_residual_plot <- #generate residual plot
ggplot(TET_residual_data,
mapping = aes(x = TET_anova.fitted.values,y = TET_anova.residual)) +
geom_point(mapping = aes(colour = Scenario)) +
labs(title = "Plot of Residuals of TET Values",
x = "Fitted TET Values (s)",
y = "Residuals")
TET_residual_plot
TET_residual_plot <- #generate residual plot
ggplot(TET_residual_data,
mapping = aes(x = TET_anova.fitted.values,y = TET_anova.residuals)) +
geom_point(mapping = aes(colour = Scenario)) +
labs(title = "Plot of Residuals of TET Values",
x = "Fitted TET Values (s)",
y = "Residuals")
TET_residual_plot
help(qqplot )
qqplot(TET_anova$residuals)
qqplot(y = TET_anova$residuals)
qqnorm(y = TET_anova$residuals)
qqline(TET_anova$residuals)
ggqqplot(TET_anova$residuals)
qqline(TET_anova$residuals)
qqnorm(y = TET_anova$residuals)
help(qqline)
help(ggqqplot)
install.packages(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggqqplot(TET_anova$residuals)
ggqqplot(TET_anova$residuals) + labs(title = "Q-Q Plot of TET Residuals")
ggqqplot(TET_anova$effects) + labs(title = "Q-Q Plot of TET Residuals")
ggqqplot(TET_anova$fitted.values) + labs(title = "Q-Q Plot of TET Residuals")
TET_qq_plot_residuals <- ggqqplot(TET_anova$residuals) +
labs(title = "Q-Q Plot of TET Residuals")
1934*0.475
1934*0.0.25
1934*0.025
#start ANOVA of TET
anova_df <- #make analysis df
datamatrix %>%
select(startposition,obstaclespresent,populationsize,Max.TET,
Avg.Distance.arithmetic) %>%
mutate(startposition = as.factor(startposition),
obstaclespresent = as.factor(obstaclespresent),
populationsize = as.factor(populationsize))
is.factor(anova_df$startposition)
interaction.plot(x.factor = anova_df$populationsize,response = anova_df$Max.TET)
help(interaction.plot)
interaction.plot(x.factor = anova_df$populationsize,trace.factor = NULL,response = anova_df$Max.TET)
interaction.plot(x.factor = anova_df$populationsize,trace.factor = anova_df$obstaclespresent,response = anova_df$Max.TET)
help("stat_mean")
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
geom_line() + stat_summary(fun = mean,geom = "line")
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + geom_line() + stat_summary(fun = mean)
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + geom_line() + stat_summary(fun = mean,geom = "point")
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + geom_point() + stat_summary(fun = mean)
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean) + geom_line()
help(qplot)
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean)
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean,geom = "line")
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun.y = mean,geom = "line")
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean)
ggplot(anova_df,mapping = aes(x = populationsize,y = mean(Max.TET)) + geom_line()
ggplot(anova_df,mapping = aes(x = populationsize,y = mean(Max.TET))) + geom_line()
ggplot(anova_df,mapping = aes(x = populationsize,y = mean(Max.TET))) + geom_point()
qplot(data = anova_df,x = populationsize,y = Max.TET) + stat_summary(fun = mean,geom = "line")
qplot(data = anova_df,x = populationsize,y = Max.TET) + stat_summary(fun = mean,geom = "line",aes(group = 1))
qplot(data = anova_df,x = populationsize,y = Max.TET) + stat_summary(fun = mean,geom = "line",aes(group = 1))
qplot(data = anova_df,x = populationsize,y = Max.TET) + stat_summary(fun = mean,geom = "point",aes(group = 1))
gglot(data = anova_df,x = populationsize,y = Max.TET) + stat_summary(fun = mean,geom = "point",aes(group = 1))
gglot(data = anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean,geom = "point",aes(group = 1))
ggplot(data = anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean,geom = "point",aes(group = 1))
ggplot(data = anova_df,mapping = aes(x = populationsize,y = Max.TET)) + stat_summary(fun = mean,geom = "line",aes(group = 1))
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = line,aes(color = "red",group = 1)) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",aes(color = "red",group = 1)) +
stat_summary(fun = mean,geom = "point",aes(color = "red",group = 1)) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
TET_population_me_plot
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",aes(color = "red",group = 1)) +
stat_summary(fun = mean,geom = "point",aes(color = "red",group = 1)) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)",colour = NA)
TET_population_me_plot
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET),show.legend = FALSE) +
stat_summary(fun = mean,geom = "line",aes(color = "red",group = 1)) +
stat_summary(fun = mean,geom = "point",aes(color = "red",group = 1)) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)",colour = NA)
TET_population_me_plot
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
TET_population_me_plot
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)") +
them_bw()
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)") +
theme_bw()
TET_population_me_plot
TET_obstacles_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = obstaclespresent,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against the Presence of Obstacles",
x = "Obstacle Level", y = "Response: TET (s)")
TET_obstacles_me_plot
TET_population_me_plot
TET_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
TET_obstacles_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = obstaclespresent,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE)
TET_obstacles_me_plot
TET_population_me_plot
colnames(anova_df)
TET_obstacles_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = obstaclespresent,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against the Presence of Obstacles",
x = "Obstacle Factor Level", y = "Response: TET (s)")
TET_position_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = startposition,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against the Presence of Obstacles",
x = "Position Factor Level", y = "Response: TET (s)")
#start ANOVA for avg distance traveled
distance_anova <- aov(Avg.Distance.arithmetic ~ populationsize,obstaclespresent,
startposition, data = anova_df)
#start ANOVA for avg distance traveled
distance_anova <- aov(Avg.Distance.arithmetic ~ populationsize *
obstaclespresent * startposition, data = anova_df)
summary(distance_anova)
distance_residual_data <- #collect residuals from ANOVA output
data.frame(distance_anova$residuals,distance_anova$fitted.values) %>%
mutate(Trial.Index = c(1:40)) %>%
left_join(select(datamatrix,Scenario,Trial.Index),by = "Trial.Index")
head(distance_residual_data)
distance_residual_plot <- #generate plot of residuals vs. fitted values
ggplot(data = distance_residual_data,
mapping = aes(x = distance_anova.fitted.values,
y = distance_anova.residuals)) +
geom_point(mapping = aes(colour = Scenario)) +
labs(title = "Plot of Residuals of Average Distance Traveled",
x = "Fitted Distance Values (m)",y = "Residuals")
distance_qq_plot_residuals <- #generate qq plot of residuals
ggqqplot(distance_anova$residuals) +
labs(title = "Q-Q Plot of Average Distance Residuals")
distance_qq_plot_effects <- #generate qq plot of effects
ggqqplot(distance_anova$effects) +
labs(title = "Q-Q Plot of Average Distance Effects")
colnames(anova_df)
TET_position_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = startposition,y = Max.TET)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against the Starting Position
of Agents",
x = "Position Factor Level", y = "Response: TET (s)")
distance_population_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = populationsize,
y = Avg.Distance.arithmetic)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for TET against the Population Size",
x = "Population Factor Level", y = "Response: TET (s)")
distance_obstacles_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = obstaclespresent,
y = Avg.Distance.arithmetic)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for Average Distance Traveled agains the
Presence of Obstacles",
x = "Obstacle Factor Level", y = "Response: TET (s)")
distance_position_me_plot <- #generate main effects plot
ggplot(anova_df,mapping = aes(x = startposition,
y = Avg.Distance.arithmetic)) +
stat_summary(fun = mean,geom = "line",
aes(color = "red",group = 1),show.legend = FALSE) +
stat_summary(fun = mean,geom = "point",
aes(color = "red",group = 1),show.legend = FALSE) +
labs(title = "Main Effects Plot for Average Distance Traveled agains
the Starting Position of Agents",
x = "Position Factor Level", y = "Response: TET (s)")
